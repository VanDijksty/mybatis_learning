<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <properties resource="jdbc.properties"/>
    <typeAliases>
        <package name="com.styyyds.mybatis.pojo"/>
    </typeAliases>
    <environments default="dev">
        <environment id="dev">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>
    <mappers>
        <mapper resource="CarMapper.xml"/>
<!--
    ● resource：从类路径中加载
    ● url：从指定的全限定资源路径中加载
        <mapper url="file:///var/mappers/AuthorMapper.xml"/>
    ● class：使用映射器接口实现类的完全限定类名
        SQL映射文件和mapper接口放在同一个目录下。
        SQL映射文件的名字也必须和mapper接口名一致。
        将CarMapper.xml文件移动到和mapper接口同一个目录下：
        在resources目录下新建：com/powernode/mybatis/mapper【这里千万要注意：不能这样新建 com.powernode.mybatis.dao】
        将CarMapper.xml文件移动到mapper目录下
        修改mybatis-config.xml文件
    ● package：将包内的映射器接口实现全部注册为映射器
        如果class较多，可以使用这种package的方式，但前提条件和上一种方式一样。
        <package name="com.styyyds.mybatis.mapper"/>
  -->
    </mappers>
</configuration>